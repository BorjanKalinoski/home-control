{"version":3,"sources":["ListSubheader.tsx"],"names":["React","StyleSheet","color","Text","withTheme","ListSubheader","Component","render","props","style","theme","rest","colors","fonts","font","medium","textColor","text","alpha","rgb","string","styles","container","create","paddingHorizontal","paddingVertical"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAAiD,cAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAaA;;;;;;;;;;;;;AAaA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAAmD;AAGjDC,EAAAA,MAAM,GAAG;AACP,wBAAkC,KAAKC,KAAvC;AAAA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAN;AAAA,UAAyBC,IAAzB;;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoBH,KAA1B;AACA,UAAMI,IAAI,GAAGD,KAAK,CAACE,MAAnB;AACA,UAAMC,SAAS,GAAGd,KAAK,CAACU,MAAM,CAACK,IAAR,CAAL,CAAmBC,KAAnB,CAAyB,IAAzB,EAA+BC,GAA/B,GAAqCC,MAArC,EAAlB;AAEA,wBACE,oBAAC,IAAD;AACE,MAAA,aAAa,EAAE;AADjB,OAEMT,IAFN;AAGE,MAAA,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR;AAAqBpB,QAAAA,KAAK,EAAEc;AAA5B,SAA0CF,IAA1C,GAAkDL,KAAlD;AAHT,OADF;AAOD;;AAhBgD;;gBAA7CJ,a,iBACiB,gB;;AAkBvB,MAAMgB,MAAM,GAAGpB,UAAU,CAACsB,MAAX,CAAkB;AAC/BD,EAAAA,SAAS,EAAE;AACTE,IAAAA,iBAAiB,EAAE,EADV;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf;AAOA,eAAerB,SAAS,CAACC,aAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nclass ListSubheader extends React.Component<Props> {\n  static displayName = 'List.Subheader';\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const font = fonts.medium;\n    const textColor = color(colors.text).alpha(0.54).rgb().string();\n\n    return (\n      <Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.container, { color: textColor, ...font }, style]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]}