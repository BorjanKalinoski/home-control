{"version":3,"sources":["FAB.tsx"],"names":["color","React","Animated","View","StyleSheet","ActivityIndicator","FABGroup","Surface","CrossFadeIcon","Icon","Text","TouchableRipple","black","white","withTheme","FAB","Component","visibility","Value","props","visible","componentDidUpdate","prevProps","scale","theme","animation","timing","state","toValue","duration","useNativeDriver","start","render","small","icon","label","accessibilityLabel","animated","customColor","disabled","onPress","onLongPress","style","loading","testID","rest","IconComponent","disabledColor","dark","alpha","rgb","string","backgroundColor","colors","accent","flatten","foregroundColor","isLight","rippleColor","opacity","transform","styles","container","touchable","content","extended","standard","fonts","medium","toUpperCase","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport FABGroup, { FABGroup as _FABGroup } from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\nimport type { IconSource } from './../Icon';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\ntype State = {\n  visibility: Animated.Value;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nclass FAB extends React.Component<Props, State> {\n  // @component ./FABGroup.tsx\n  static Group = FABGroup;\n\n  static defaultProps = {\n    visible: true,\n  };\n\n  state = {\n    visibility: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { scale } = this.props.theme.animation;\n    if (this.props.visible === prevProps.visible) {\n      return;\n    }\n\n    if (this.props.visible) {\n      Animated.timing(this.state.visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(this.state.visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      small,\n      icon,\n      label,\n      accessibilityLabel = label,\n      animated = true,\n      color: customColor,\n      disabled,\n      onPress,\n      onLongPress,\n      theme,\n      style,\n      visible,\n      loading,\n      testID,\n      ...rest\n    } = this.props;\n    const { visibility } = this.state;\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n      StyleSheet.flatten(style) || {};\n\n    let foregroundColor;\n\n    if (typeof customColor !== 'undefined') {\n      foregroundColor = customColor;\n    } else if (disabled) {\n      foregroundColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else {\n      foregroundColor = !color(backgroundColor).isLight()\n        ? white\n        : 'rgba(0, 0, 0, .54)';\n    }\n\n    const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n    return (\n      <Surface\n        {...rest}\n        style={\n          [\n            {\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          onLongPress={onLongPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          style={styles.touchable}\n          testID={testID}\n        >\n          <View\n            style={[\n              styles.content,\n              label ? styles.extended : small ? styles.small : styles.standard,\n            ]}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <IconComponent source={icon} size={24} color={foregroundColor} />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator size={18} color={foregroundColor} />\n            ) : null}\n            {label ? (\n              <Text\n                style={[\n                  styles.label,\n                  { color: foregroundColor, ...theme.fonts.medium },\n                ]}\n              >\n                {label.toUpperCase()}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n"]}