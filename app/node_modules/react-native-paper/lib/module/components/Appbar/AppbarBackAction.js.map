{"version":3,"sources":["AppbarBackAction.tsx"],"names":["React","AppbarAction","AppbarBackIcon","AppbarBackAction","Component","render","props","accessibilityLabel"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAAsD;AAOpDC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,YAAD,eAAkB,KAAKC,KAAvB;AAA8B,MAAA,IAAI,EAAEJ;AAApC,OAAP;AACD;;AATmD;;gBAAhDC,gB,iBACiB,mB;;gBADjBA,gB,kBAGkB;AACpBI,EAAAA,kBAAkB,EAAE;AADA,C;;AASxB,eAAeJ,gBAAf","sourcesContent":["import * as React from 'react';\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\ntype Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return <AppbarAction {...this.props} icon={AppbarBackIcon} />;\n  }\n}\n\nexport default AppbarBackAction;\n"]}