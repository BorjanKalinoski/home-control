{"version":3,"sources":["AvatarIcon.tsx"],"names":["defaultSize","Avatar","React","Component","render","props","icon","size","style","theme","rest","StyleSheet","flatten","backgroundColor","colors","primary","restStyle","textColor","color","isLight","white","width","height","borderRadius","styles","container","create","justifyContent","alignItems"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAGA,MAAMA,WAAW,GAAG,EAApB;;AAsBA;;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAA4C;AAO1CC,EAAAA,MAAM,GAAG;AACP,wBAA4D,KAAKC,KAAjE;AAAA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAI,GAAGP,WAAf;AAA4BQ,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAAN;AAAA,UAAmDC,IAAnD;;AAEA,iBACEC,wBAAWC,OAAX,CAAmBJ,KAAnB,KAA6B,EAD/B;AAAA,UAAM;AAAEK,MAAAA,eAAe,GAAGJ,KAAK,CAACK,MAAN,CAAaC;AAAjC,KAAN;AAAA,UAAmDC,SAAnD;;AAEA,UAAMC,SAAS,GACb,KAAKZ,KAAL,CAAWa,KAAX,KACC,oBAAML,eAAN,EAAuBM,OAAvB,KAAmC,oBAAnC,GAA0DC,aAD3D,CADF;AAIA,wBACE,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAEd,IADT;AAEEe,QAAAA,MAAM,EAAEf,IAFV;AAGEgB,QAAAA,YAAY,EAAEhB,IAAI,GAAG,CAHvB;AAIEM,QAAAA;AAJF,OADK,EAOLW,MAAM,CAACC,SAPF,EAQLT,SARK;AADT,OAWMN,IAXN,gBAaE,oBAAC,aAAD;AAAM,MAAA,MAAM,EAAEJ,IAAd;AAAoB,MAAA,KAAK,EAAEW,SAA3B;AAAsC,MAAA,IAAI,EAAEV,IAAI,GAAG;AAAnD,MAbF,CADF;AAiBD;;AAjCyC;;gBAAtCN,M,iBACiB,a;;gBADjBA,M,kBAGkB;AACpBM,EAAAA,IAAI,EAAEP;AADc,C;;AAiCxB,MAAMwB,MAAM,GAAGb,wBAAWe,MAAX,CAAkB;AAC/BD,EAAAA,SAAS,EAAE;AACTE,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,UAAU,EAAE;AAFH;AADoB,CAAlB,CAAf;;eAOe,wBAAU3B,MAAV,C","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport type { IconSource } from './../Icon';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nclass Avatar extends React.Component<Props> {\n  static displayName = 'Avatar.Icon';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { icon, size = defaultSize, style, theme, ...rest } = this.props;\n\n    const { backgroundColor = theme.colors.primary, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n    const textColor =\n      this.props.color ||\n      (color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          styles.container,\n          restStyle,\n        ]}\n        {...rest}\n      >\n        <Icon source={icon} color={textColor} size={size * 0.6} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"]}