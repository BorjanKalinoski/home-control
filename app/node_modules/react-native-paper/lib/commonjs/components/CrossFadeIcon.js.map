{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["CrossFadeIcon","React","Component","currentIcon","props","source","previousIcon","fade","Animated","Value","getDerivedStateFromProps","nextProps","nextState","componentDidUpdate","_","prevState","state","theme","animation","scale","setValue","timing","duration","toValue","useNativeDriver","start","render","color","size","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon, IconSource } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  currentIcon: IconSource;\n  previousIcon: IconSource | null;\n  fade: Animated.Value;\n};\n\nclass CrossFadeIcon extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\n    if (nextState.currentIcon === nextProps.source) {\n      return null;\n    }\n\n    return {\n      currentIcon: nextProps.source,\n      previousIcon: nextState.currentIcon,\n    };\n  }\n\n  state: State = {\n    currentIcon: this.props.source,\n    previousIcon: null,\n    fade: new Animated.Value(1),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    const { previousIcon } = this.state;\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    if (\n      !isValidIcon(previousIcon) ||\n      isEqualIcon(previousIcon, prevState.previousIcon)\n    ) {\n      return;\n    }\n\n    this.state.fade.setValue(1);\n\n    Animated.timing(this.state.fade, {\n      duration: scale * 200,\n      toValue: 0,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const { color, size } = this.props;\n    const opacityPrev = this.state.fade;\n    const opacityNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0],\n        })\n      : 1;\n\n    const rotatePrev = this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['-90deg', '0deg'],\n    });\n\n    const rotateNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '-180deg'],\n        })\n      : '0deg';\n\n    return (\n      <View\n        style={[\n          styles.content,\n          {\n            height: size,\n            width: size,\n          },\n        ]}\n      >\n        {this.state.previousIcon ? (\n          <Animated.View\n            style={[\n              styles.icon,\n              {\n                opacity: opacityPrev,\n                transform: [{ rotate: rotatePrev }],\n              },\n            ]}\n          >\n            <Icon source={this.state.previousIcon} size={size} color={color} />\n          </Animated.View>\n        ) : null}\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityNext,\n              transform: [{ rotate: rotateNext }],\n            },\n          ]}\n        >\n          <Icon source={this.state.currentIcon} size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]}