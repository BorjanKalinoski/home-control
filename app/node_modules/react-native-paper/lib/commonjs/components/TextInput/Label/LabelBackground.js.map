{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","labelStyle","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","StyleSheet","absoluteFill","styles","view","outlinedLabel","top","scaleY","create","position","left","width","height","paddingHorizontal","color"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAIA,MAAMA,eAAe,GAAG,CAAC;AACvBC,EAAAA,WADuB;AAEvBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,gBADU;AAEVC,IAAAA,mBAFU;AAGVC,IAAAA,WAHU;AAIVC,IAAAA,gBAJU;AAKVC,IAAAA,KALU;AAMVC,IAAAA;AANU,GAFW;AAUvBC,EAAAA;AAVuB,CAAD,KAWI;AAC1B,QAAMC,QAAQ,GAAGJ,gBAAgB,IAAIL,WAAW,CAACU,KAAjD;AACA,QAAMC,OAAO,GAAGX,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC;AAC9CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkC;AAE9CC,IAAAA,WAAW,EAAE,CAACN,QAAQ,GAAG,CAAH,GAAO,CAAhB,EAAmB,CAAnB;AAFiC,GAAhC,CAAhB;AAKA,QAAMO,iBAAiB,GAAG;AACxBC,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,UAAU,EAAElB,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC;AAC1CC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8B;AAE1CC,QAAAA,WAAW,EAAE,CAAC,CAACZ,mBAAF,EAAuB,CAAvB;AAF6B,OAAhC;AADd,KADS;AADa,GAA1B;AAWA,SAAOG,KAAK,GACR,cACE,oBAAC,qBAAD,CAAU,IAAV;AACE,IAAA,GAAG,EAAC,sBADN;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAE,CACLa,wBAAWC,YADN,EAELC,MAAM,CAACC,IAFF,EAGL;AACEf,MAAAA,eADF;AAEEI,MAAAA;AAFF,KAHK,EAOLK,iBAPK;AAHT,IADF,eAcE,oBAAC,qBAAD;AACE,IAAA,GAAG,EAAC,sBADN;AAEE,IAAA,KAAK,EAAE,CACLd,gBADK,EAELM,UAFK,EAGLa,MAAM,CAACE,aAHF,EAIL;AACEC,MAAAA,GAAG,EAAEpB,WAAW,GAAG,CADrB;AAEEG,MAAAA,eAFF;AAGEI,MAAAA,OAHF;AAIEM,MAAAA,SAAS,EAAE,CACT,GAAGT,UAAU,CAACS,SADL,EAET;AACEQ,QAAAA,MAAM,EAAEzB,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC;AACtCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD0B;AAEtCC,UAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN;AAFyB,SAAhC;AADV,OAFS;AAJb,KAJK,CAFT;AAqBE,IAAA,aAAa,EAAE;AArBjB,KAuBGT,KAvBH,CAdF,CADQ,GAyCR,IAzCJ;AA0CD,CAvED;;eAyEeP,e;;;AAEf,MAAMsB,MAAM,GAAGF,wBAAWO,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,QAAQ,EAAE,UADN;AAEJH,IAAAA,GAAG,EAAE,CAFD;AAGJI,IAAAA,IAAI,EAAE,EAHF;AAIJC,IAAAA,KAAK,EAAE,CAJH;AAKJC,IAAAA,MAAM,EAAE;AALJ,GADyB;AAQ/BP,EAAAA,aAAa,EAAE;AACbI,IAAAA,QAAQ,EAAE,UADG;AAEbC,IAAAA,IAAI,EAAE,EAFO;AAGbG,IAAAA,iBAAiB,EAAE,CAHN;AAIbC,IAAAA,KAAK,EAAE;AAJM;AARgB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n  },\n  labelStyle,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              opacity,\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 8,\n    height: 2,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]}