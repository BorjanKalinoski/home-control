{"version":3,"sources":["Appbar.tsx"],"names":["DEFAULT_APPBAR_HEIGHT","Appbar","React","Component","render","props","children","dark","style","theme","rest","colors","isDarkTheme","mode","StyleSheet","flatten","backgroundColor","customBackground","elevation","restStyle","isDark","surface","primary","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","AppbarContent","styles","appbar","spacing","toArray","filter","map","i","AppbarAction","AppbarBackAction","includes","color","white","black","marginLeft","alignItems","cloneElement","AppbarHeader","create","height","flexDirection","paddingHorizontal","width"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAIA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAkBO,MAAMA,qBAAqB,GAAG,EAA9B;AAEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAA4C;AAC1C;AAEA;AAEA;AAEA;AAGAC,EAAAA,MAAM,GAAG;AACP,wBAAkD,KAAKC,KAAvD;AAAA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA;AAAzB,KAAN;AAAA,UAAyCC,IAAzC;;AAEA,UAAM;AAAEC,MAAAA,MAAF;AAAUJ,MAAAA,IAAI,EAAEK,WAAhB;AAA6BC,MAAAA;AAA7B,QAAsCJ,KAA5C;;AACA,iBAIeK,wBAAWC,OAAX,CAAmBP,KAAnB,KAA6B,EAJ5C;AAAA,UAAM;AACJQ,MAAAA,eAAe,EAAEC,gBADb;AAEJC,MAAAA,SAAS,GAAG;AAFR,KAAN;AAAA,UAGKC,SAHL;;AAMA,QAAIC,MAAJ;AAEA,UAAMJ,eAAe,GAAGC,gBAAgB,GACpCA,gBADoC,GAEpCL,WAAW,IAAIC,IAAI,KAAK,UAAxB,GACA,sBAAQK,SAAR,EAAmBP,MAAM,CAACU,OAA1B,CADA,GAEAV,MAAM,CAACW,OAJX;;AAKA,QAAI,OAAOf,IAAP,KAAgB,SAApB,EAA+B;AAC7Ba,MAAAA,MAAM,GAAGb,IAAT;AACD,KAFD,MAEO;AACLa,MAAAA,MAAM,GACJJ,eAAe,KAAK,aAApB,GACI,KADJ,GAEI,CAAC,oBAAMA,eAAN,EAAuBO,OAAvB,EAHP;AAID;;AAED,QAAIC,mBAAmB,GAAG,KAA1B;AACA,QAAIC,oBAAoB,GAAG,KAA3B;AACA,QAAIC,qBAAqB,GAAG,KAA5B;;AACA,QAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,UAAIC,gBAAgB,GAAG,KAAvB;AACA,UAAIC,cAAc,GAAG,CAArB;AACA,UAAIC,eAAe,GAAG,CAAtB;AAEA7B,MAAAA,KAAK,CAAC8B,QAAN,CAAeC,OAAf,CAAuB3B,QAAvB,EAAkC4B,KAAD,IAAW;AAC1C,0BAAIhC,KAAK,CAACiC,cAAN,CAAqBD,KAArB,CAAJ,EAAiC;AAC/B,cAAIA,KAAK,CAACE,IAAN,KAAeC,uBAAnB,EAAkC;AAChCR,YAAAA,gBAAgB,GAAG,IAAnB;AACD,WAFD,MAEO,IAAIA,gBAAJ,EAAsB;AAC3BE,YAAAA,eAAe;AAChB,WAFM,MAEA;AACLD,YAAAA,cAAc;AACf;AACF;AACF,OAVD;AAYAN,MAAAA,mBAAmB,GACjBK,gBAAgB,IAAIC,cAAc,GAAG,CAArC,IAA0CC,eAAe,GAAG,CAD9D;AAEAN,MAAAA,oBAAoB,GAAGD,mBAAmB,IAAIM,cAAc,KAAK,CAAjE;AACAJ,MAAAA,qBAAqB,GAAGF,mBAAmB,IAAIO,eAAe,KAAK,CAAnE;AACD;;AACD,wBACE,oBAAC,gBAAD,CACE;AADF;AAEE,MAAA,KAAK,EAAE,CAAC;AAAEf,QAAAA;AAAF,OAAD,EAAsBsB,MAAM,CAACC,MAA7B,EAAqC;AAAErB,QAAAA;AAAF,OAArC,EAAoDC,SAApD;AAFT,OAGMT,IAHN,GAKGe,oBAAoB,gBAAG,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEa,MAAM,CAACE;AAApB,MAAH,GAAqC,IAL5D,EAMGtC,KAAK,CAAC8B,QAAN,CAAeS,OAAf,CAAuBnC,QAAvB,EACEoC,MADF,CACUR,KAAD,IAAWA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,SADtD,EAEES,GAFF,CAEM,CAACT,KAAD,EAAQU,CAAR,KAAc;AACjB,UACE,eAAC1C,KAAK,CAACiC,cAAN,CAAqBD,KAArB,CAAD,IACA,CAAC,CACCG,uBADD,EAECQ,qBAFD,EAGCC,yBAHD,CAIC;AAJD,QAKCC,QALD,CAKUb,KAAK,CAACE,IALhB,CAFH,EAQE;AACA,eAAOF,KAAP;AACD;;AAED,YAAM7B,KAAuD,GAAG;AAC9D2C,QAAAA,KAAK,EACH,OAAOd,KAAK,CAAC7B,KAAN,CAAY2C,KAAnB,KAA6B,WAA7B,GACId,KAAK,CAAC7B,KAAN,CAAY2C,KADhB,GAEI5B,MAAM,GACN6B,aADM,GAENC;AANwD,OAAhE;;AASA,UAAIhB,KAAK,CAACE,IAAN,KAAeC,uBAAnB,EAAkC;AAChChC,QAAAA,KAAK,CAACG,KAAN,GAAc,CACZ;AACAoC,QAAAA,CAAC,KAAK,CAAN,IAAW;AAAEO,UAAAA,UAAU,EAAE;AAAd,SAFC,EAGZ3B,mBAAmB,IAAI;AAAE4B,UAAAA,UAAU,EAAE;AAAd,SAHX,EAIZlB,KAAK,CAAC7B,KAAN,CAAYG,KAJA,CAAd;AAMD;;AACD,0BAAON,KAAK,CAACmD,YAAN,CAAmBnB,KAAnB,EAA0B7B,KAA1B,CAAP;AACD,KAjCF,CANH,EAwCGqB,qBAAqB,gBAAG,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEY,MAAM,CAACE;AAApB,MAAH,GAAqC,IAxC7D,CADF;AA4CD;;AAzGyC;;gBAAtCvC,M,aAEaoC,uB;;gBAFbpC,M,YAIY4C,qB;;gBAJZ5C,M,gBAMgB6C,yB;;gBANhB7C,M,YAQYqD,sB;;AAoGlB,MAAMhB,MAAM,GAAGxB,wBAAWyC,MAAX,CAAkB;AAC/BhB,EAAAA,MAAM,EAAE;AACNiB,IAAAA,MAAM,EAAExD,qBADF;AAENyD,IAAAA,aAAa,EAAE,KAFT;AAGNL,IAAAA,UAAU,EAAE,QAHN;AAINM,IAAAA,iBAAiB,EAAE,CAJb;AAKNxC,IAAAA,SAAS,EAAE;AALL,GADuB;AAQ/BsB,EAAAA,OAAO,EAAE;AACPmB,IAAAA,KAAK,EAAE;AADA;AARsB,CAAlB,CAAf;;eAae,wBAAU1D,MAAV,C","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  AppbarContent as _AppbarContent,\n} from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport AppbarHeader, { AppbarHeader as _AppbarHeader } from './AppbarHeader';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport overlay from '../../styles/overlay';\n\ntype Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nclass Appbar extends React.Component<Props> {\n  // @component ./AppbarContent.tsx\n  static Content = AppbarContent;\n  // @component ./AppbarAction.tsx\n  static Action = AppbarAction;\n  // @component ./AppbarBackAction.tsx\n  static BackAction = AppbarBackAction;\n  // @component ./AppbarHeader.tsx\n  static Header = AppbarHeader;\n\n  render() {\n    const { children, dark, style, theme, ...rest } = this.props;\n\n    const { colors, dark: isDarkTheme, mode } = theme;\n    const {\n      backgroundColor: customBackground,\n      elevation = 4,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n\n    let isDark: boolean;\n\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark =\n        backgroundColor === 'transparent'\n          ? false\n          : !color(backgroundColor).isLight();\n    }\n\n    let shouldCenterContent = false;\n    let shouldAddLeftSpacing = false;\n    let shouldAddRightSpacing = false;\n    if (Platform.OS === 'ios') {\n      let hasAppbarContent = false;\n      let leftItemsCount = 0;\n      let rightItemsCount = 0;\n\n      React.Children.forEach(children, (child) => {\n        if (React.isValidElement(child)) {\n          if (child.type === AppbarContent) {\n            hasAppbarContent = true;\n          } else if (hasAppbarContent) {\n            rightItemsCount++;\n          } else {\n            leftItemsCount++;\n          }\n        }\n      });\n\n      shouldCenterContent =\n        hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n      shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n      shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n    }\n    return (\n      <Surface\n        //@ts-ignore\n        style={[{ backgroundColor }, styles.appbar, { elevation }, restStyle]}\n        {...rest}\n      >\n        {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n        {React.Children.toArray(children)\n          .filter((child) => child != null && typeof child !== 'boolean')\n          .map((child, i) => {\n            if (\n              !React.isValidElement(child) ||\n              ![\n                AppbarContent,\n                AppbarAction,\n                AppbarBackAction,\n                // @ts-ignore\n              ].includes(child.type)\n            ) {\n              return child;\n            }\n\n            const props: { color?: string; style?: StyleProp<ViewStyle> } = {\n              color:\n                typeof child.props.color !== 'undefined'\n                  ? child.props.color\n                  : isDark\n                  ? white\n                  : black,\n            };\n\n            if (child.type === AppbarContent) {\n              props.style = [\n                // Since content is not first item, add extra left margin\n                i !== 0 && { marginLeft: 8 },\n                shouldCenterContent && { alignItems: 'center' },\n                child.props.style,\n              ];\n            }\n            return React.cloneElement(child, props);\n          })}\n        {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n"]}