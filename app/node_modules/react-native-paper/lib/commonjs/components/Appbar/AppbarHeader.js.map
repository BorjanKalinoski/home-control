{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","React","Component","render","props","statusBarHeight","APPROX_STATUSBAR_HEIGHT","style","dark","rest","isDarkTheme","colors","mode","theme","StyleSheet","flatten","height","DEFAULT_APPBAR_HEIGHT","elevation","backgroundColor","customBackground","zIndex","restStyle","surface","primary","Wrapper","View","SafeAreaView","marginTop","styles","appbar","create"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,MAAMA,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAAkD;AAGhDC,EAAAA,MAAM,GAAG;AACP,wBAMI,KAAKC,KANT;AAAA,UAAM;AACJ;AACAC,MAAAA,eAAe,GAAGC,kCAFd;AAGJC,MAAAA,KAHI;AAIJC,MAAAA;AAJI,KAAN;AAAA,UAKKC,IALL;;AAOA,UAAM;AAAED,MAAAA,IAAI,EAAEE,WAAR;AAAqBC,MAAAA,MAArB;AAA6BC,MAAAA;AAA7B,QAAsCH,IAAI,CAACI,KAAjD;;AACA,iBAMeC,wBAAWC,OAAX,CAAmBR,KAAnB,KAA6B,EAN5C;AAAA,UAAM;AACJS,MAAAA,MAAM,GAAGC,6BADL;AAEJC,MAAAA,SAAS,GAAG,CAFR;AAGJC,MAAAA,eAAe,EAAEC,gBAHb;AAIJC,MAAAA,MAAM,GAAG;AAJL,KAAN;AAAA,UAKKC,SALL;;AAOA,UAAMH,eAAe,GAAGC,gBAAgB,GACpCA,gBADoC,GAEpCV,WAAW,IAAIE,IAAI,KAAK,UAAxB,GACA,sBAAQM,SAAR,EAAmBP,MAAM,CAACY,OAA1B,CADA,GAEAZ,MAAM,CAACa,OAJX,CAhBO,CAqBP;;AACA,UAAMC,OAAO,GACX,OAAO,KAAKrB,KAAL,CAAWC,eAAlB,KAAsC,QAAtC,GAAiDqB,iBAAjD,GAAwDC,yBAD1D;AAGA,wBACE,oBAAC,OAAD;AACE,MAAA,KAAK,EACH,CACE;AAAER,QAAAA,eAAF;AAAmBE,QAAAA,MAAnB;AAA2BH,QAAAA;AAA3B,OADF,EAEE,qBAAOA,SAAP,CAFF;AAFJ,oBAQE,oBAAC,eAAD,CACE;AADF;AAEE,MAAA,KAAK,EAAE,CACL;AACA;AAAEF,QAAAA,MAAF;AAAUG,QAAAA,eAAV;AAA2BS,QAAAA,SAAS,EAAEvB;AAAtC,OAFK,EAGLwB,MAAM,CAACC,MAHF,EAILR,SAJK,CAFT;AAQE,MAAA,IAAI,EAAEd;AARR,OASMC,IATN,EARF,CADF;AAsBD;;AAlD+C;;;;gBAA5CT,Y,iBACiB,e;;AAoDvB,MAAM6B,MAAM,GAAGf,wBAAWiB,MAAX,CAAkB;AAC/BD,EAAAA,MAAM,EAAE;AACNZ,IAAAA,SAAS,EAAE;AADL;AADuB,CAAlB,CAAf;;eAMe,wBAAUlB,YAAV,C,EAEf","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      dark,\n      ...rest\n    } = this.props;\n    const { dark: isDarkTheme, colors, mode } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      backgroundColor: customBackground,\n      zIndex = 0,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n\n    return (\n      <Wrapper\n        style={\n          [\n            { backgroundColor, zIndex, elevation },\n            shadow(elevation),\n          ] as StyleProp<ViewStyle>\n        }\n      >\n        <Appbar\n          //@ts-ignore\n          style={[\n            //@ts-ignore\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          dark={dark}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"]}