{"version":3,"sources":["AppbarAction.tsx"],"names":["AppbarAction","React","Component","render","props","color","iconColor","black","alpha","rgb","string","icon","disabled","onPress","accessibilityLabel","rest","size"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;AACA;;;;;;;;;;;;;;;;AAgCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCe,MAAMA,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAAkD;AAO/DC,EAAAA,MAAM,GAAG;AACP,wBAOI,KAAKC,KAPT;AAAA,UAAM;AACJC,MAAAA,KAAK,EAAEC,SAAS,GAAG,oBAAMC,aAAN,EAAaC,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADf;AAEJC,MAAAA,IAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,OAJI;AAKJC,MAAAA;AALI,KAAN;AAAA,UAMKC,IANL;;AASA,wBACE,oBAAC,mBAAD;AACE,MAAA,OAAO,EAAEF,OADX;AAEE,MAAA,KAAK,EAAEP,SAFT;AAGE,MAAA,IAAI,EAAEK,IAHR;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,kBAAkB,EAAEE,kBALtB;AAME,MAAA,QAAQ;AANV,OAOMC,IAPN,EADF;AAWD;;AA5B8D;;;;gBAA5Cf,Y,iBACE,e;;gBADFA,Y,kBAGG;AACpBgB,EAAAA,IAAI,EAAE;AADc,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport type {\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport type { IconSource } from '../Icon';\n\ntype Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-android.png\" />\n *       <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-ios.png\" />\n *       <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nexport default class AppbarAction extends React.Component<Props> {\n  static displayName = 'Appbar.Action';\n\n  static defaultProps = {\n    size: 24,\n  };\n\n  render() {\n    const {\n      color: iconColor = color(black).alpha(0.54).rgb().string(),\n      icon,\n      disabled,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n\n    return (\n      <IconButton\n        onPress={onPress}\n        color={iconColor}\n        icon={icon}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        animated\n        {...rest}\n      />\n    );\n  }\n}\n"]}