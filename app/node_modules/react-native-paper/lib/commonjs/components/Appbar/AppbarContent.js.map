{"version":3,"sources":["AppbarContent.tsx"],"names":["AppbarContent","React","Component","render","props","color","titleColor","white","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","styles","container","Platform","OS","regular","medium","StyleSheet","create","flex","paddingHorizontal","fontSize"],"mappings":";;;;;;;AAAA;;AACA;;AASA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;AAwCA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMA,aAAN,SAA4BC,KAAK,CAACC,SAAlC,CAAmD;AAGjDC,EAAAA,MAAM,GAAG;AACP,wBAWI,KAAKC,KAXT;AAAA,UAAM;AACJC,MAAAA,KAAK,EAAEC,UAAU,GAAGC,aADhB;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,aAHI;AAIJC,MAAAA,OAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA,QANI;AAOJC,MAAAA,UAPI;AAQJC,MAAAA,KARI;AASJC,MAAAA;AATI,KAAN;AAAA,UAUKC,IAVL;;AAYA,UAAM;AAAEC,MAAAA;AAAF,QAAYH,KAAlB;AAEA,UAAMI,aAAa,GAAG,oBAAMZ,UAAN,EAAkBa,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,GAAmCC,MAAnC,EAAtB;AAEA,wBACE,oBAAC,qCAAD;AAA0B,MAAA,OAAO,EAAEX,OAAnC;AAA4C,MAAA,QAAQ,EAAE,CAACA;AAAvD,oBACE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAE,CAACY,MAAM,CAACC,SAAR,EAAmBZ,KAAnB;AAAb,OAA4CK,IAA5C,gBACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEJ,QADP;AAEE,MAAA,KAAK,EAAE;AAEHP,QAAAA,KAAK,EAAEC;AAFJ,SAGCkB,sBAASC,EAAT,KAAgB,KAAhB,GAAwBR,KAAK,CAACS,OAA9B,GAAwCT,KAAK,CAACU,MAH/C,GAKLL,MAAM,CAACP,KALF,EAMLF,UANK,CAFT;AAUE,MAAA,aAAa,EAAE,CAVjB;AAWE,MAAA,UAAU,MAXZ;AAYE,MAAA,mBAAmB,EAAC,QAZtB,CAaE;AAbF;AAcE,MAAA,iBAAiB,EAAEW,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC;AAdzD,OAgBGV,KAhBH,CADF,EAmBGP,QAAQ,gBACP,oBAAC,aAAD;AACE,MAAA,KAAK,EAAE,CAACc,MAAM,CAACd,QAAR,EAAkB;AAAEH,QAAAA,KAAK,EAAEa;AAAT,OAAlB,EAA4CT,aAA5C,CADT;AAEE,MAAA,aAAa,EAAE;AAFjB,OAIGD,QAJH,CADO,GAOL,IA1BN,CADF,CADF;AAgCD;;AApDgD;;;;gBAA7CR,a,iBACiB,gB;;AAsDvB,MAAMsB,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,iBAAiB,EAAE;AAFV,GADoB;AAK/BhB,EAAAA,KAAK,EAAE;AACLiB,IAAAA,QAAQ,EAAER,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AADlC,GALwB;AAQ/BjB,EAAAA,QAAQ,EAAE;AACRwB,IAAAA,QAAQ,EAAER,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AAD/B;AARqB,CAAlB,CAAf;;eAae,wBAAUzB,aAAV,C,EAEf","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleRef,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            ref={titleRef}\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessible\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]}