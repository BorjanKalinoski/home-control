{"version":3,"sources":["Surface.tsx"],"names":["Surface","style","theme","rest","flattenedStyles","StyleSheet","flatten","elevation","dark","isDarkTheme","mode","colors","backgroundColor","surface"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,MAAMA,OAAO,GAAG,UAAsC;AAAA,MAArC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqC;AAAA,MAAlBC,IAAkB;;AACpD,QAAMC,eAAe,GAAGC,wBAAWC,OAAX,CAAmBL,KAAnB,KAA6B,EAArD;AACA,QAAM;AAAEM,IAAAA,SAAS,GAAG;AAAd,MAA+BH,eAArC;AACA,QAAM;AAAEI,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAsCT,KAA5C;AACA;AAAA;AACE;AACA,wBAAC,qBAAD,CAAU,IAAV,eACMC,IADN;AAEE,MAAA,KAAK,EAAE,CACL;AACES,QAAAA,eAAe,EACbH,WAAW,IAAIC,IAAI,KAAK,UAAxB,GACI,sBAAQH,SAAR,EAAmBI,MAAM,CAACE,OAA1B,CADJ,GAEIF,MAAM,CAACE;AAJf,OADK,EAOLN,SAAS,IAAI,qBAAOA,SAAP,CAPR,EAQLN,KARK;AAFT;AAFF;AAgBD,CApBD;;eAsBe,wBAAUD,OAAV,C","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nconst Surface = ({ style, theme, ...rest }: Props) => {\n  const flattenedStyles = StyleSheet.flatten(style) || {};\n  const { elevation = 4 }: ViewStyle = flattenedStyles;\n  const { dark: isDarkTheme, mode, colors } = theme;\n  return (\n    // @ts-ignore\n    <Animated.View\n      {...rest}\n      style={[\n        {\n          backgroundColor:\n            isDarkTheme && mode === 'adaptive'\n              ? overlay(elevation, colors.surface)\n              : colors.surface,\n        },\n        elevation && shadow(elevation),\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(Surface);\n"]}