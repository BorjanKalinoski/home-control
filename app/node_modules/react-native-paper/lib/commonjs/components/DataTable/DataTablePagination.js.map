{"version":3,"sources":["DataTablePagination.tsx"],"names":["DataTablePagination","React","Component","render","props","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","colors","text","alpha","rgb","string","styles","container","color","size","I18nManager","isRTL","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,MAAMA,mBAAN,SAAkCC,KAAK,CAACC,SAAxC,CAAyD;AAGvDC,EAAAA,MAAM,GAAG;AACP,wBAQI,KAAKC,KART;AAAA,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,IAFI;AAGJC,MAAAA,aAHI;AAIJC,MAAAA,YAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA;AANI,KAAN;AAAA,UAOKC,IAPL;;AASA,UAAMC,UAAU,GAAG,oBAAMF,KAAK,CAACG,MAAN,CAAaC,IAAnB,EAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,GAA0CC,MAA1C,EAAnB;AAEA,wBACE,oBAAC,iBAAD,eAAUN,IAAV;AAAgB,MAAA,KAAK,EAAE,CAACO,MAAM,CAACC,SAAR,EAAmBV,KAAnB;AAAvB,qBACE,oBAAC,aAAD;AAAM,MAAA,KAAK,EAAE,CAACS,MAAM,CAACb,KAAR,EAAe;AAAEe,QAAAA,KAAK,EAAER;AAAT,OAAf,CAAb;AAAoD,MAAA,aAAa,EAAE;AAAnE,OACGP,KADH,CADF,eAIE,oBAAC,mBAAD;AACE,MAAA,IAAI,EAAE,CAAC;AAAEgB,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAD,kBACJ,oBAAC,8BAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,SAAS,EAAEC,yBAAYC,KAAZ,GAAoB,KAApB,GAA4B;AAJzC,QAFJ;AASE,MAAA,KAAK,EAAEb,KAAK,CAACG,MAAN,CAAaC,IATtB;AAUE,MAAA,QAAQ,EAAER,IAAI,KAAK,CAVrB;AAWE,MAAA,OAAO,EAAE,MAAME,YAAY,CAACF,IAAI,GAAG,CAAR;AAX7B,MAJF,eAiBE,oBAAC,mBAAD;AACE,MAAA,IAAI,EAAE,CAAC;AAAEe,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAD,kBACJ,oBAAC,8BAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,SAAS,EAAEC,yBAAYC,KAAZ,GAAoB,KAApB,GAA4B;AAJzC,QAFJ;AASE,MAAA,KAAK,EAAEb,KAAK,CAACG,MAAN,CAAaC,IATtB;AAUE,MAAA,QAAQ,EAAER,IAAI,KAAKC,aAAa,GAAG,CAVrC;AAWE,MAAA,OAAO,EAAE,MAAMC,YAAY,CAACF,IAAI,GAAG,CAAR;AAX7B,MAjBF,CADF;AAiCD;;AAhDsD;;;;gBAAnDN,mB,iBACiB,sB;;AAkDvB,MAAMkB,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,cAAc,EAAE,UADP;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE;AAJJ,GADoB;AAQ/BxB,EAAAA,KAAK,EAAE;AACLyB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,WAAW,EAAE;AAFR;AARwB,CAAlB,CAAf;;eAce,wBAAU/B,mBAAV,C,EAEf","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-right\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]}