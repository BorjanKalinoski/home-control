{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","React","Component","spinAnim","Animated","Value","props","sortDirection","componentDidUpdate","prevProps","timing","state","toValue","duration","useNativeDriver","start","render","numeric","children","onPress","theme","style","numberOfLines","rest","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","styles","transform","rotate","I18nManager","isRTL","container","right","cell","sorted","color","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <MaterialCommunityIcon\n          name=\"arrow-down\"\n          size={16}\n          color={theme.colors.text}\n          direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]}