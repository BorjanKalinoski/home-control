{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","React","Component","render","props","onPress","style","theme","rest","borderBottomColor","dark","white","black","alpha","rgb","string","styles","container","content","children","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAMA,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAAkD;AAGhDC,EAAAA,MAAM,GAAG;AACP,wBAA2C,KAAKC,KAAhD;AAAA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAN;AAAA,UAAkCC,IAAlC;;AACA,UAAMC,iBAAiB,GAAG,oBAAMF,KAAK,CAACG,IAAN,GAAaC,aAAb,GAAqBC,aAA3B,EACvBC,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B;AAKA,wBACE,oBAAC,wBAAD,eACMP,IADN;AAEE,MAAA,OAAO,EAAEH,OAFX;AAGE,MAAA,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmB;AAAER,QAAAA;AAAF,OAAnB,EAA0CH,KAA1C;AAHT,qBAKE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEU,MAAM,CAACE;AAApB,OAA8B,KAAKd,KAAL,CAAWe,QAAzC,CALF,CADF;AASD;;AAnB+C;;;;gBAA5CnB,Y,iBACiB,e;;AAqBvB,MAAMgB,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,WAAW,EAAE,OADJ;AAETC,IAAAA,iBAAiB,EAAEH,wBAAWI,aAFrB;AAGTC,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BR,EAAAA,OAAO,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE;AAFR;AAPsB,CAAlB,CAAf;;eAae,wBAAU5B,YAAV,C,EAEf","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]}